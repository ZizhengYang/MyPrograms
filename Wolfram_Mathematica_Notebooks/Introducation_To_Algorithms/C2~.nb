(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     25444,        594]
NotebookOptionsPosition[     23687,        563]
NotebookOutlinePosition[     24042,        579]
CellTagsIndexPosition[     23999,        576]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell["\<\
Loop invariant:

\tIn computer science, a loop invariant is a property of a program loop that \
is true before (and after) each iteration. It is a logical assertion, \
sometimes checked within the code by an assertion call. Knowing its \
invariant(s) is essential in understanding the effect of a loop.
\
\>", "Text",
 CellChangeTimes->{{3.7537230049909496`*^9, 3.753723011842002*^9}, {
   3.7537231161774783`*^9, 3.7537231237969356`*^9}, 
   3.7537272737513084`*^9},ExpressionUUID->"0b47cbc1-bb4e-4d5b-95dd-\
4a6ea705f4f2"],

Cell["Insertion Sort", "Text",
 CellFrame->{{0, 0}, {0, 3}},
 CellChangeTimes->{{3.753808337091752*^9, 
  3.7538083807253704`*^9}},ExpressionUUID->"58de5aae-aa1f-456d-8f83-\
d599eba34b66"],

Cell["Java", "Text",
 CellFrame->{{0, 0}, {0, 3}},
 CellChangeTimes->{{3.753724165508377*^9, 
  3.7537241885517817`*^9}},ExpressionUUID->"8142d660-88c1-46ea-9358-\
d5cb1a301b42"],

Cell[BoxData[
 RowBox[{"public", " ", "class", " ", "InsertionSort", 
  RowBox[{"{", "\n", "\t", "\n", "\t", 
   RowBox[{
   "public", " ", "static", " ", "void", " ", "insertionSortSmallToLarge", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"int", "[", "]"}], " ", "arr"}], ")"}], 
    RowBox[{"{", "\n", "\t\t", "\n", "\t\t", 
     RowBox[{"for", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"int", " ", "i"}], " ", "=", " ", "1"}], ";", " ", 
        RowBox[{"i", " ", "<", " ", 
         RowBox[{"arr", ".", "length"}]}], ";", " ", 
        RowBox[{"i", "++"}]}], ")"}], 
      RowBox[{"{", "\n", "\t\t", "\n", "\t\t\t", 
       RowBox[{
        RowBox[{
         RowBox[{"int", " ", "pivot"}], " ", "=", " ", 
         RowBox[{"arr", "[", "i", "]"}]}], ";", "\n", "\t\t\t", 
        RowBox[{
         RowBox[{"int", " ", "j"}], " ", "=", " ", 
         RowBox[{"i", " ", "-", " ", "1"}]}], ";", "\n", "\t\t\t", 
        RowBox[{
         RowBox[{"while", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"j", " ", ">=", " ", "0"}], " ", "&&", " ", 
            RowBox[{
             RowBox[{"arr", "[", "j", "]"}], " ", ">", " ", "pivot"}]}], 
           ")"}], 
          RowBox[{"{", "\n", "\t\t\t\t", 
           RowBox[{
            RowBox[{
             RowBox[{"arr", "[", 
              RowBox[{"j", "+", "1"}], "]"}], " ", "=", " ", 
             RowBox[{"arr", "[", "j", "]"}]}], ";", "\n", "\t\t\t\t", 
            RowBox[{"j", "--"}], ";"}], "\n", "\t\t\t", "}"}], "\n", "\t\t\t", 
          RowBox[{"arr", "[", 
           RowBox[{"j", "+", "1"}], "]"}]}], " ", "=", " ", "pivot"}], ";"}], 
       "\n", "\t\t\t", "\n", "\t\t", "}"}]}], "\n", "\t\t", "\n", "\t", "}"}],
     "\n", "\t", "\n", "\t", "public", " ", "static", " ", "void", " ", 
    "insertionSortLargeToSmall", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"int", "[", "]"}], " ", "arr"}], ")"}], 
    RowBox[{"{", "\n", "\t\t", "\n", "\t\t", 
     RowBox[{"for", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"int", " ", "i"}], " ", "=", " ", "1"}], ";", " ", 
        RowBox[{"i", " ", "<", " ", 
         RowBox[{"arr", ".", "length"}]}], ";", " ", 
        RowBox[{"i", "++"}]}], ")"}], 
      RowBox[{"{", "\n", "\t\t", "\n", "\t\t\t", 
       RowBox[{
        RowBox[{
         RowBox[{"int", " ", "pivot"}], " ", "=", " ", 
         RowBox[{"arr", "[", "i", "]"}]}], ";", "\n", "\t\t\t", 
        RowBox[{
         RowBox[{"int", " ", "j"}], " ", "=", " ", 
         RowBox[{"i", " ", "-", " ", "1"}]}], ";", "\n", "\t\t\t", 
        RowBox[{
         RowBox[{"while", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"j", " ", ">=", " ", "0"}], " ", "&&", " ", 
            RowBox[{
             RowBox[{"arr", "[", "j", "]"}], " ", "<", " ", "pivot"}]}], 
           ")"}], 
          RowBox[{"{", "\n", "\t\t\t\t", 
           RowBox[{
            RowBox[{
             RowBox[{"arr", "[", 
              RowBox[{"j", "+", "1"}], "]"}], " ", "=", " ", 
             RowBox[{"arr", "[", "j", "]"}]}], ";", "\n", "\t\t\t\t", 
            RowBox[{"j", "--"}], ";"}], "\n", "\t\t\t", "}"}], "\n", "\t\t\t", 
          RowBox[{"arr", "[", 
           RowBox[{"j", "+", "1"}], "]"}]}], " ", "=", " ", "pivot"}], ";"}], 
       "\n", "\t\t\t", "\n", "\t\t", "}"}]}], "\n", "\t\t", "\n", "\t", 
     "}"}]}], "\n", "\t", "\n", "}"}]}]], "Code",
 CellChangeTimes->{{3.7537238628653717`*^9, 3.753724132147148*^9}, {
  3.753724205101509*^9, 3.7537242348322487`*^9}, {3.7537242805144815`*^9, 
  3.7537244294437523`*^9}, {3.7537244860246997`*^9, 3.753724608622783*^9}, {
  3.7537249779905643`*^9, 3.753724979871826*^9}, {3.753725135075178*^9, 
  3.7537251372996945`*^9}},ExpressionUUID->"cf4299e7-e23c-4fec-b25d-\
7205ca2ac2e6"],

Cell["C", "Text",
 CellFrame->{{0, 0}, {0, 3}},
 CellChangeTimes->{{3.7537257270487833`*^9, 3.753725748454245*^9}, {
  3.7537258839258795`*^9, 
  3.7537258850622516`*^9}},ExpressionUUID->"84bd84c3-27dd-4503-87f8-\
4aad1c5440d1"],

Cell[BoxData[{
 RowBox[{"int", " ", "insertion_sort", "_small", "_to", "_large", 
  RowBox[{"(", 
   RowBox[{"int", " ", 
    RowBox[{"arr", "[", "]"}]}], ")"}]}], "\n", 
 RowBox[{
  RowBox[{"{", "\n", "\t", "\n", "}"}], "\n"}], "\n", 
 RowBox[{"int", " ", "insertion_sort", "_large", "_to", "_small", 
  RowBox[{"(", 
   RowBox[{"int", " ", 
    RowBox[{"arr", "[", "]"}]}], ")"}]}], "\n", 
 RowBox[{"{", "\n", "\t", "\n", "}"}]}], "Code",
 CellChangeTimes->{{3.753725715565774*^9, 
  3.7537258117551403`*^9}},ExpressionUUID->"b8c104f2-8e56-4c68-a569-\
34280554672f"],

Cell["Python", "Text",
 CellFrame->{{0, 0}, {0, 3}},
 CellChangeTimes->{{3.7538081667463274`*^9, 
  3.7538082414755964`*^9}},ExpressionUUID->"4543f21c-e61d-4378-b37b-\
1fe1fef56041"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"def", " ", "insertion_sort", "_small", "_to", "_large", 
   RowBox[{"(", 
    RowBox[{"int", " ", 
     RowBox[{"arr", "[", "]"}]}], ")"}], 
   RowBox[{"{", "\n", "\t", "\n", "}"}]}], "\n"}], "\n", 
 RowBox[{"def", " ", "insertion_sort", "_large", "_to", "_small", 
  RowBox[{"(", 
   RowBox[{"int", " ", 
    RowBox[{"arr", "[", "]"}]}], ")"}], 
  RowBox[{"{", "\n", "\t", "\n", "}"}]}]}], "Code",
 CellChangeTimes->{{3.7538082293993416`*^9, 
  3.7538082738995247`*^9}},ExpressionUUID->"c43a3052-81e2-49ef-9896-\
bd96060ad5da"],

Cell["\<\

Random - access machine (RAM) :
\tIn computer science, random-access machine (RAM) is an abstract machine in \
the general class of register machines. The RAM is very similar to the \
counter machine but with the added capability of \[OpenCurlyQuote]indirect \
addressing\[CloseCurlyQuote] of its registers. Like the counter machine the \
RAM has its instructions in the finite-state portion of the machine (the \
so-called Harvard architecture).
\tThe RAM\[CloseCurlyQuote]s equivalent of the universal Turing machine \
\[Dash] with its program in the registers as well as its data.
\
\>", "Text",
 CellChangeTimes->{{3.753725583418028*^9, 3.7537257105257006`*^9}, {
   3.7537258159561205`*^9, 3.753725820573077*^9}, {3.7537272215003133`*^9, 
   3.753727313418025*^9}, 3.753810045296836*^9, 
   3.753813058533085*^9},ExpressionUUID->"01bc8eb6-c5d3-45e2-b2d2-\
58348b4ae1b8"],

Cell["Merge Sort", "Text",
 CellFrame->{{0, 0}, {0, 3}},
 CellChangeTimes->{{3.7537271795741796`*^9, 3.7537271838054733`*^9}, {
  3.753727215030676*^9, 3.753727220218258*^9}, {3.753727319809863*^9, 
  3.7537273211485014`*^9}, {3.7537274810285587`*^9, 3.7537274869427814`*^9}, {
  3.753727533782548*^9, 3.753727553079025*^9}, {3.753808394530031*^9, 
  3.7538084039058056`*^9}, {3.7538087401662827`*^9, 
  3.753808760541072*^9}},ExpressionUUID->"f51b5d01-a6fb-4674-b3cc-\
65bfc0a98651"],

Cell["Java", "Text",
 CellFrame->{{0, 0}, {0, 3}},
 CellChangeTimes->{{3.753808762383922*^9, 
  3.75380878072649*^9}},ExpressionUUID->"b2eaca28-a9d5-4c61-87c8-\
77e7beb4e130"],

Cell[BoxData[
 RowBox[{"public", " ", "class", " ", "MergeSort", 
  RowBox[{"{", "\n", "\t", "\n", "\t", 
   RowBox[{"public", " ", "static", " ", "void", " ", "mergeSortSmallToLarge", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"int", "[", "]"}], " ", "arr"}], ")"}], 
    RowBox[{"{", "\n", "\t\t", "\n", "\t\t", 
     RowBox[{
      RowBox[{
       RowBox[{"MergeSort", ".", "sortSmallToLarge"}], 
       RowBox[{"(", 
        RowBox[{"arr", ",", " ", "0", ",", " ", 
         RowBox[{
          RowBox[{"arr", ".", "length"}], " ", "-", " ", "1"}]}], ")"}]}], 
      ";"}], "\n", "\t\t", "\n", "\t", "}"}], "\n", "\t", "\n", "\t", 
    "public", " ", "static", " ", "void", " ", "sortSmallToLarge", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"int", "[", "]"}], " ", "arr"}], ",", " ", 
      RowBox[{"int", " ", "start"}], ",", " ", 
      RowBox[{"int", " ", "end"}]}], ")"}], 
    RowBox[{"{", "\n", "\t\t", "\n", "\t\t", 
     RowBox[{"if", 
      RowBox[{"(", 
       RowBox[{"start", " ", "<", " ", "end"}], ")"}], 
      RowBox[{"{", "\n", "\t\t", "\n", "\t\t\t", 
       RowBox[{
        RowBox[{"mid", " ", "=", " ", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"end", " ", "+", " ", "start"}], ")"}], " ", "/", " ", 
          "2"}]}], ";", "\n", "\t\t\t", 
        RowBox[{"sortSmallToLarge", 
         RowBox[{"(", 
          RowBox[{"arr", ",", " ", "start", ",", " ", "mid"}], ")"}]}], ";", 
        "\n", "\t\t\t", 
        RowBox[{"sortSmallToLarge", 
         RowBox[{"(", 
          RowBox[{"arr", ",", " ", 
           RowBox[{"mid", " ", "+", " ", "1"}], ",", " ", "end"}], ")"}]}], 
        ";", "\n", "\t\t\t", 
        RowBox[{"mergeSmallToLarge", 
         RowBox[{"(", 
          RowBox[{
          "arr", ",", " ", "start", ",", " ", "mid", ",", " ", "end"}], 
          ")"}]}], ";"}], "\n", "\t\t", "\n", "\t\t", "}"}]}], "\n", "\t\t", 
     "\n", "\t", "}"}], "\n", "\t", "\n", "\t", "public", " ", "static", " ", 
    "void", " ", "mergeSmallToLarge", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"int", "[", "]"}], " ", "arr"}], ",", " ", 
      RowBox[{"int", " ", "start"}], ",", " ", 
      RowBox[{"int", " ", "mid"}], ",", " ", 
      RowBox[{"int", " ", "end"}]}], ")"}], 
    RowBox[{"{", "\n", "\t\t", "\n", "\t\t", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"int", "[", "]"}], " ", "temp"}], " ", "=", " ", 
       RowBox[{"arr", "[", "]"}]}], ";", "\n", "\t\t", 
      RowBox[{
       RowBox[{"int", " ", "i"}], " ", "=", " ", "start"}], ";", "\n", "\t\t", 
      RowBox[{
       RowBox[{"int", " ", "j"}], " ", "=", " ", 
       RowBox[{"mid", " ", "+", " ", "1"}]}], ";", "\n", "\t\t", 
      RowBox[{
       RowBox[{"int", " ", "count"}], " ", "=", " ", "0"}], ";", "\n", "\t\t", 
      RowBox[{"while", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"i", " ", "<", " ", 
          RowBox[{"mid", " ", "+", " ", "1"}]}], " ", "&&", " ", 
         RowBox[{"j", " ", "<", " ", "end"}]}], ")"}], 
       RowBox[{"{", "\n", "\t\t\t", "\n", "\t\t\t", 
        RowBox[{
         RowBox[{"if", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"temp", "[", "i", "]"}], " ", "<", " ", 
            RowBox[{"temp", "[", "j", "]"}]}], ")"}], 
          RowBox[{"{", "\n", "\t\t\t\t", 
           RowBox[{
            RowBox[{
             RowBox[{"arr", "[", "count", "]"}], " ", "=", " ", 
             RowBox[{"temp", "[", "i", "]"}]}], ";", "\n", "\t\t\t\t", 
            RowBox[{"i", "++"}], ";"}], "\n", "\t\t\t", "}"}], "\n", "\t\t\t",
           "\n", "\t\t\t", "if", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"temp", "[", "i", "]"}], " ", ">=", " ", 
            RowBox[{"temp", "[", "j", "]"}]}], ")"}], 
          RowBox[{"{", "\n", "\t\t\t\t", 
           RowBox[{
            RowBox[{
             RowBox[{"arr", "[", "count", "]"}], " ", "=", " ", 
             RowBox[{"temp", "[", "j", "]"}]}], ";", "\n", "\t\t\t\t", 
            RowBox[{"j", "++"}], ";"}], "\n", "\t\t\t", "}"}], "\n", "\t\t\t",
           "\n", "\t\t\t", 
          RowBox[{"count", "++"}]}], ";"}], "\n", "\t\t", "\n", "\t\t", "}"}],
        "\n", "\t\t", "\n", "\t\t", "while", 
       RowBox[{"(", 
        RowBox[{"i", " ", "<", " ", 
         RowBox[{"mid", " ", "+", " ", "1"}]}], ")"}], 
       RowBox[{"{", "\n", "\t\t\t", 
        RowBox[{
         RowBox[{
          RowBox[{"arr", "[", "count", "]"}], " ", "=", " ", 
          RowBox[{"temp", "[", "i", "]"}]}], ";", "\n", "\t\t\t", 
         RowBox[{"i", "++"}], ";", "\n", "\t\t\t", 
         RowBox[{"count", "++"}], ";"}], "\n", "\t\t", "}"}], "\n", "\t\t", 
       "\n", "\t\t", "while", 
       RowBox[{"(", 
        RowBox[{"j", " ", "<", " ", "end"}], ")"}], 
       RowBox[{"{", "\n", "\t\t\t", 
        RowBox[{
         RowBox[{
          RowBox[{"arr", "[", "count", "]"}], " ", "=", " ", 
          RowBox[{"temp", "[", "j", "]"}]}], ";", "\n", "\t\t\t", 
         RowBox[{"j", "++"}], ";", "\n", "\t\t\t", 
         RowBox[{"count", "++"}], ";"}], "\n", "\t\t", "}"}]}]}], "\n", 
     "\t\t", "\n", "\t", "}"}], "\n", "\t", "\n", "\t", "public", " ", 
    "static", " ", "void", " ", "mergeSortLargeToSmall", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"int", "[", "]"}], " ", "arr"}], ")"}], 
    RowBox[{
    "{", "\n", "\t\t", "\n", "\t\t", "\n", "\t\t", "\n", "\t", "}"}]}], "\n", 
   "\t", "\n", "}"}]}]], "Code",
 CellChangeTimes->{{3.753808781891518*^9, 3.7538088480679865`*^9}, {
  3.753808969432488*^9, 3.7538090099205832`*^9}, {3.753809048018244*^9, 
  3.7538090815945473`*^9}, {3.753810310930063*^9, 3.75381033547316*^9}, {
  3.753810401833076*^9, 3.7538104080464034`*^9}, {3.7538104536342907`*^9, 
  3.7538105642603707`*^9}, {3.7538112920928197`*^9, 3.7538114545549555`*^9}, {
  3.7538114932127657`*^9, 3.7538116291558976`*^9}, {3.7538119426613483`*^9, 
  3.7538121645839643`*^9}, {3.753812214299907*^9, 3.7538122339266796`*^9}, {
  3.753812278652669*^9, 3.7538123058206177`*^9}, {3.753812397019605*^9, 
  3.7538124475874186`*^9}, {3.7538143840722656`*^9, 3.753814394908256*^9}},
 EmphasizeSyntaxErrors->
  True,ExpressionUUID->"820f7731-e241-441f-ae47-562622d77da8"],

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"n", "*", 
     RowBox[{"Log", "[", 
      RowBox[{"2", ",", " ", "n"}], "]"}]}], "+", "n"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"n", ",", " ", "0", ",", " ", "30"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.753813661634858*^9, 
  3.7538137229685884`*^9}},ExpressionUUID->"6dee905f-b1f9-4d2a-be11-\
63eb05e5a7d8"],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   TagBox[
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1: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
pQ==
      "]]},
    Annotation[#, "Charting`Private`Tag$11461#1"]& ]},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->{{14.112245, 1.5}, {6.0714, 0.5}},
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-0.625, 30.625}, {-10.124929023908882`, 187.066273494426}},
  PlotRangeClipping->True,
  PlotRangePadding->Automatic,
  Ticks->{Automatic, Automatic}]], "Input",
 CellChangeTimes->{{3.7538144589091835`*^9, 
  3.753814493994404*^9}},ExpressionUUID->"43bca8c1-7fed-46b9-80bb-\
cd1f981c9f8b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"n", "*", 
     RowBox[{"Log", "[", 
      RowBox[{"2", ",", " ", "n"}], "]"}]}], "+", "n"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"n", ",", " ", "0", ",", " ", "100"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.753813757283089*^9, 
  3.7538137592647114`*^9}},ExpressionUUID->"f73e7396-f9a4-43bf-8b6e-\
1c02784a42a1"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwVj3k8lfkChy0VLW600lXRMoUWZyzTiH7fyjZ2srxptCgcoayFTkjyciPi
2iZxRORobCFZesORNocwGVFRkqYSjjqkw+3+8XyeP5/Po+p60s5NSkJC4uQP
/u91CeLcrDUNu2SjrFWrN0kzt2XV1vqwswnnfuLc1CyGaQguztvMLiHixsis
Q/wWJll38He5S7dJHyc3oqvxCXNf089jHpshvQ/633O72hjO8tnqWW4T6esY
0V1Y186kJhnt+h7fQnK9Mzpbp9uZksVxTZOhj0n0JzOprY3tzIO4DtMvHm1k
e+E8oxyVdmY0atG7YN5T8n3CwCvIVMCcbSpRE3E7Seqp/Qv0ih8zC6T2eQel
/UXujVTlNUU+YFLxtVgY300m2ncKrTv5zPrwjDG/qB5yqXo48S3vHlNar689
GtpLIsJ3DBZvrGYe6p2/89HjFTkc6vtRQ+MiU6S/NEynpJ+ojAtCClW5ZKz3
WHYgb4AcK/p9dy2rgoStkn09zn1Drun1dJhtaiFpaVYen+PfEeVVFWbRps/J
S11uzLbYYTJRz4+vNnxJNjwbK/SJek+q5ues+rptgJQuS/n4IfQD6d4ZLQr1
e0seXe71G/b4TCbHjknHXhohMempD5NZo8RS6W1MTMgo2cImzlolo0T5FrvG
rGyM+MtcPuPPGyOTLOXwfM0JMmOkfXeUKyQqd+bUMseniGJT6N5P8SKivtBL
fsV+KZjVy1gNecySZoHMUp3pf4E16/plxegsmZyvXZc9uBhxKocE6/UlsLGc
4T3zkEega02QPV8Ci1QH5cwdFGA45Muv7JLE8KsriUG/LsXrTy+OBH+RRg1P
WmC3YSVUxLczxbqy+HlOsO/HgLVoldOdP8dFHuMDVkcOt21Gh/mSdAFHHkWF
9jPpK9Twd+zITxmZ8piKdOsUu6hhcG6B4bY+ebQKPLrMPqnhu3hlBHVAAbNc
kcF7OQ2oj0x9vbl/CazdT3UIHbciRlA/6OC4DF6zqrIa0izsSTC6V2CtiIP8
c82CIR24bf8mx5JTAe+dq8wXBcBSzW1shckGyJ8YMyyXMkZ519mghzs2I2+h
VqjG3+bYuUS9ZE74FtiGaR3o1LWFx3TS1euUJr4NaQnXJtjj5P13WiWWPyMj
auymJ98J/3Get1HsrQ3HnSGfn9gfwNGWM+4sti42Dh8KkK49iAYZJVuv/Ttg
NlG668PiI2ApRKS+D9TDsMt1BafPrjgsNNhi5a2PBx1S/qWVx5CT1awsit+F
pmsZYqNCd9y6pNfbYQcQRV139h9sBNYY2Fy12I28sJC0nJPHwTy6Ph57YA9O
VLxoMPP3hqfJr/We1F70RamENjidQOYNVqXXcUMk6cXGXdDxxWVh/Tnf00Yo
fZr/skffD0O8oFNsf2PU7bgre0PbH3zjpPTISBPc1f3FM2FvACStn79OiDAF
3T2eF74nEBK7qyS5Ib/BleeQs3NXEGJWiiw7aDMUC99IGdqegq/z0UbReXME
dVdM3dx3GgPntI+RFAt0VduU/dcnGMuSM57H5ljiyf2ZcNWoEOTLq4e0XLHC
C01qDic2FA3+a402FVlD8GyaF5t/BlkqXGUDexusO1XorFzOQT3nmwS73QYz
nnarG++chaq5zPf1TrYocpekLXvCUNGmdrGnyxaWSv1D/wyFI+7+jKaKix36
jbk+ltERSA54f/xwnx1SpKz+kJc/B87yNYvX7d+H0xaTD6vSzqFQbe6jwP59
sEoQaYRpRGLehKRSw0F7mGqYB0tURaJAsyws6509sqxZddUW56HmyrMS+zhg
cqRG2nrgPHp/u1Pu8MEB5+sMzwZ4R6EjN3QrCXBE16EFrYPSFzB5y1Z/3bgj
Ugwky1ovX8BstX9l9AknBNv4EY/V0TDXNDbifHFC6ZuqHUcro9Hist3TK4AC
P0YoW7aXxpKj7NqrQRQmMrvDthrTOMjOkWs/TUFuQbe40JTGV/+l5docCuOF
G1bmWtLYECP6Jo6ikLRxsCrFiUZEOROXmErheIkBj+NFQ0/GprTyDgVec4mz
bTKN6EWxUsO1FGxNvccFKTSeKjTar7pLIX6PerJFOg22svZUWCMFfa+CzyZX
aaSxFPeYPqaQqJW4jBTQmDjQ3/m8j0K+iafc9loaOKL0k9wrCnrXXmj/WU/j
ortdMBmgkFpj7KZxj8Y6P75y3lsKq6eF/ZuaadhG33DzGaHgy83bq9pGI/Pi
wO3sUQqOrTfKs5/SGE5ctaBj/EePfUV9TdePnytxxboiCv/wTXX+3UPjCbdZ
wnOKwjOh5IOMXhor82fsrkxTKPPOP6r4koZr0S/XW8UUqt11ZNP6aRSX+opm
ZynYKRVXLn9D438AxFZA
       "]]},
     Annotation[#, "Charting`Private`Tag$12085#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 100}, {-0.26536889709468364`, 764.3856004334905}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.7538137612513485`*^9},ExpressionUUID->"13912c91-4931-4731-a57d-\
3e812720add6"]
}, Open  ]]
},
WindowSize->{709, 948},
WindowMargins->{{Automatic, -7}, {Automatic, 0}},
FrontEndVersion->"11.2 for Microsoft Windows (64-bit) (2017\:5e7410\:67082\
\:65e5)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 534, 12, 144, "Text",ExpressionUUID->"0b47cbc1-bb4e-4d5b-95dd-4a6ea705f4f2"],
Cell[1095, 34, 188, 4, 45, "Text",ExpressionUUID->"58de5aae-aa1f-456d-8f83-d599eba34b66"],
Cell[1286, 40, 178, 4, 45, "Text",ExpressionUUID->"8142d660-88c1-46ea-9358-d5cb1a301b42"],
Cell[1467, 46, 3793, 89, 663, "Code",ExpressionUUID->"cf4299e7-e23c-4fec-b25d-7205ca2ac2e6"],
Cell[5263, 137, 228, 5, 45, "Text",ExpressionUUID->"84bd84c3-27dd-4503-87f8-4aad1c5440d1"],
Cell[5494, 144, 568, 14, 195, "Code",ExpressionUUID->"b8c104f2-8e56-4c68-a569-34280554672f"],
Cell[6065, 160, 182, 4, 45, "Text",ExpressionUUID->"4543f21c-e61d-4378-b37b-1fe1fef56041"],
Cell[6250, 166, 564, 14, 159, "Code",ExpressionUUID->"c43a3052-81e2-49ef-9896-bd96060ad5da"],
Cell[6817, 182, 886, 17, 210, "Text",ExpressionUUID->"01bc8eb6-c5d3-45e2-b2d2-58348b4ae1b8"],
Cell[7706, 201, 484, 8, 45, "Text",ExpressionUUID->"f51b5d01-a6fb-4674-b3cc-65bfc0a98651"],
Cell[8193, 211, 175, 4, 45, "Text",ExpressionUUID->"b2eaca28-a9d5-4c61-87c8-77e7beb4e130"],
Cell[8371, 217, 6204, 141, 1185, "Code",ExpressionUUID->"820f7731-e241-441f-ae47-562622d77da8"],
Cell[14578, 360, 397, 11, 45, "Input",ExpressionUUID->"6dee905f-b1f9-4d2a-be11-63eb05e5a7d8"],
Cell[14978, 373, 4354, 87, 232, InheritFromParent,ExpressionUUID->"43bca8c1-7fed-46b9-80bb-cd1f981c9f8b"],
Cell[CellGroupData[{
Cell[19357, 464, 398, 11, 45, "Input",ExpressionUUID->"f73e7396-f9a4-43bf-8b6e-1c02784a42a1"],
Cell[19758, 477, 3913, 83, 240, "Output",ExpressionUUID->"13912c91-4931-4731-a57d-3e812720add6"]
}, Open  ]]
}
]
*)

